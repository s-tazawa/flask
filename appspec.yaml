version: 0.0
### for ecs deploy 
# Resources:
#   - TargetService:
#       Type: AWS::ECS::Service
#       Properties:
#         TaskDefinition: "<TASK_DEFINITION>"
#         LoadBalancerInfo:
#             ContainerName: flask-frontend
#             ContainerPort: 80
#       # Optional properties
#         PlatformVersion: "LATEST"
#         NetworkConfiguration:
#           AwsvpcConfiguration:
#             Subnets: ["subnet-1234abcd","subnet-5678abcd"]
#             SecurityGroups: ["sg-12345678"]
#             AssignPublicIp: "ENABLED"
#         CapacityProviderStrategy:
#           - Base: 1
#             CapacityProvider: "FARGATE_SPOT"
#             Weight: 2
#           - Base: 0
#             CapacityProvider: "FARGATE"
#             Weight: 1
# Hooks:
#   - BeforeInstall: "LambdaFunctionToValidateBeforeInstall"
#   - AfterInstall: "LambdaFunctionToValidateAfterInstall"
#   - AfterAllowTestTraffic: "LambdaFunctionToValidateAfterTestTrafficStarts"
#   - BeforeAllowTraffic: "LambdaFunctionToValidateBeforeAllowingProductionTraffic"
#   - AfterAllowTraffic: "LambdaFunctionToValidateAfterAllowingProductionTraffic"
os: linux
files:
  - source: /
    destination: /var/www/frontend
hooks:
  BeforeInstall:
    - location: scripts/before_install.sh
      timeout: 300
      runas: root
  AfterInstall:
    - location: scripts/after_install.sh
      timeout: 300
      runas: root
  ApplicationStart:
    - location: scripts/start_server.sh
    # - location: scripts/create_test_db.sh
      timeout: 300
      runas: root
  ApplicationStop:
    - location: scripts/stop_server.sh
      timeout: 300
      runas: root